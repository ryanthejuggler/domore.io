// Generated by CoffeeScript 1.6.2
(function() {
  var ObjectID, Task, db;

  db = require('./db');

  ObjectID = db.ObjectID;

  /*
    @class Task
  */


  Task = (function() {
    /**
      @field _id {ObjectID}
      @field owner {ObjectID}
      @field title {string}
      @field description {string}
      @field start {Date or "none"}
      @field end {Date or "none"}
      @field type {string} Either 'event' or 'task'
      @field blockedBy {Array(ObjectID)} List of ObjectIDs for tasks that are blocking this one
      @field blockerFor List of ObjectIDs for tasks that this one is blocking
      @field complete {boolean}
    */

    /**
      @constructor
    */
    function Task(config) {
      var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;

      this._id = config._id, this.owner = config.owner, this.title = config.title, this.description = config.description, this.start = config.start, this.end = config.end, this.type = config.type, this.blockedBy = config.blockedBy, this.blockerFor = config.blockerFor, this.complete = config.complete;
      if ((_ref = this.title) == null) {
        this.title = '';
      }
      if ((_ref1 = this.description) == null) {
        this.description = '';
      }
      if ((_ref2 = this.start) == null) {
        this.start = 'none';
      }
      if ((_ref3 = this.end) == null) {
        this.end = 'none';
      }
      if ((_ref4 = this.type) == null) {
        this.type = 'event';
      }
      if ((_ref5 = this.blockedBy) == null) {
        this.blockedBy = [];
      }
      if ((_ref6 = this.blockerFor) == null) {
        this.blockerFor = [];
      }
      if ((_ref7 = this.complete) == null) {
        this.complete = false;
      }
    }

    /**
      @method save
    */


    Task.prototype.save = function(callback) {
      var taskData, _ref, _ref1, _ref2, _ref3, _ref4;

      taskData = {
        owner: this.owner,
        title: (_ref = this.title) != null ? _ref : '',
        description: (_ref1 = this.description) != null ? _ref1 : '',
        start: (_ref2 = this.start) != null ? _ref2 : 'none',
        end: (_ref3 = this.end) != null ? _ref3 : 'none',
        type: (_ref4 = this.type) != null ? _ref4 : 'event',
        blockedBy: this.blockedBy,
        blockerFor: this.blockerFor,
        complete: this.complete
      };
      if (this._id) {
        taskData._id = this._id;
      }
      return db.collection('tasks', function(err, cxn) {
        return cxn.save(taskData, {
          safe: true
        }, function(err) {
          return callback(err);
        });
      });
    };

    return Task;

  })();

}).call(this);
